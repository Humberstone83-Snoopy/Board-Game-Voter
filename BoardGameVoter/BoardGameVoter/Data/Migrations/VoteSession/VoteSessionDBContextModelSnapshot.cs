// <auto-generated />
using System;
using BoardGameVoter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameVoter.data.migrations.VoteSession
{
    [DbContext(typeof(VoteSessionDBContext))]
    partial class VoteSessionDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.Vote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LibraryGameID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVotes")
                        .HasColumnType("int");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VoteSessionAttendeeID")
                        .HasColumnType("int");

                    b.Property<int>("VoteSessionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VoteSessionID");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSession", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HostUserID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVotingOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("LeadGameID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VotesCast")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("VoteSessions");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSessionAttendee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("VoteSessionID")
                        .HasColumnType("int");

                    b.Property<int>("VotesRemaining")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VoteSessionID");

                    b.ToTable("VoteSessionAttendees");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSessionResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LibraryGameID")
                        .HasColumnType("int");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VoteSessionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VoteSessionID");

                    b.ToTable("VoteSessionResults");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.Vote", b =>
                {
                    b.HasOne("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSession", "VoteSession")
                        .WithMany()
                        .HasForeignKey("VoteSessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteSession");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSessionAttendee", b =>
                {
                    b.HasOne("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSession", "VoteSession")
                        .WithMany()
                        .HasForeignKey("VoteSessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteSession");
                });

            modelBuilder.Entity("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSessionResult", b =>
                {
                    b.HasOne("BoardGameVoter.Models.EntityModels.VoteSessions.VoteSession", "VoteSession")
                        .WithMany()
                        .HasForeignKey("VoteSessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteSession");
                });
#pragma warning restore 612, 618
        }
    }
}
