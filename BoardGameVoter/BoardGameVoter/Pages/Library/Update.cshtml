@page "{LibraryUID}"
@using BoardGameVoter.Models.Enums
@model UpdateModel
@{
    ViewData["Title"] = "Update";
}
<form id="Update" method="post">
    <h1>@ViewData["Title"]</h1>
    <div class="row">
        <div class="col-md-5">
            <section>
                <div class="form-group">
                    <label asp-for="Nickname"></label>
                    <input id="NicknameInput" asp-for="Nickname" class="form-control" readonly="@Model.DisableInputs" />
                </div>
                <div class="form-group">
                    <label asp-for="Title"></label>
                    <input id="TitleInput" asp-for="Title" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    <label asp-for="Publisher"></label>
                    <input id="PublisherInput" asp-for="Publisher" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    <label asp-for="ReleaseDate"></label>
                    <input id="ReleaseDateInput" asp-for="ReleaseDate" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    <label asp-for="TagLine"></label>
                    <input id="TagLineInput" asp-for="TagLine" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    <label asp-for="Description"></label>
                    <input id="DescriptionInput" asp-for="Description" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    @if (Model.DisableInputs)
                    {
                        <input type="hidden" asp-for="GameWeight" value="@Model.GameWeight" />
                    }
                    <label asp-for="GameWeight"></label>
                    <select id="DifficultySelect" asp-for="GameWeight" asp-items="Html.GetEnumSelectList<Weight>()" class="form-control" disabled="(@Model.DisableInputs || @Model.GameWeight != Weight.Undefined)">
                        <option>Select difficulty ...</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="AgeRating"></label>
                    <input id="AgeRatingInput" asp-for="AgeRating" class="form-control" readonly="true"/>
                </div>
                <div class="form-group">
                    <label asp-for="MinimumPlayers"></label>
                    <input id="MinPlayersInput" asp-for="MinimumPlayers" class="form-control" readonly="true" />
                    <label asp-for="MaximumPlayers"></label>
                    <input id="MaxPlayersInput" asp-for="MaximumPlayers" class="form-control" readonly="true" />
                </div>
                <div class="form-group">
                    <label asp-for="MinimumPlayTime"></label>
                    <input id="MinPlayTimeInput" asp-for="MinimumPlayTime" class="form-control" readonly="true" />
                    <label asp-for="MaximumPlayTime"></label>
                    <input id="MaxPlayTimeInput" asp-for="MaximumPlayTime" class="form-control" readonly="true" />
                </div>
                <div class="form-group">
                    @if (Model.DisableInputs)
                    {
                        <input type="hidden" asp-for="IsActive" value="@Model.IsActive" />
                    }
                    <label asp-for="IsActive"></label>
                    <input id="Active" type="checkbox" asp-for="IsActive" disabled="@Model.DisableInputs" />
                </div>
            </section>
        </div>
        <div class="col-md-5 col-md-offset-3">
            <section>
                <h5>Type</h5>
                <p>This is a generic way of classifying games by type.</p>
                <div class="form-group">
                    <label asp-for="PrimaryType"></label>
                    <select id="PrimaryTypeSelect" asp-for="PrimaryType" asp-items="@Model.BoardGameTypes" class="form-control" disabled="true">
                        <option>@(Model.PrimaryType ?? "Undefined")</option>
                    </select>
                    <select id="SecondaryTypeSelect" asp-for="SecondaryType" asp-items="@Model.BoardGameTypes" class="form-control" disabled="true">
                        <option>@(Model.SecondaryType ?? "Undefined")</option>
                    </select>
                </div>
                <br />
                <h5>Category</h5>
                <p>Category refers to the general genre or theme of the game. Common categories include Zombies, World War II or Card Game.</p>
                <div class="form-group">
                    <label asp-for="PrimaryCategory"></label>
                    <select id="PrimaryCategorySelect" asp-for="PrimaryCategory" asp-items="@Model.BoardGameCategories" class="form-control" disabled="true">
                        <option>@(Model.PrimaryCategory ?? "Undefined")</option>
                    </select>
                    <select id="SecondaryCategorySelect" asp-for="SecondaryCategory" asp-items="@Model.BoardGameCategories" class="form-control" disabled="true">
                        <option>@(Model.SecondaryCategory ?? "Undefined")</option>
                    </select>
                    <select id="TertiaryCategorySelect" asp-for="TertiaryCategory" asp-items="@Model.BoardGameCategories" class="form-control" disabled="true">
                        <option>@(Model.TertiaryCategory ?? "Undefined")</option>
                    </select>
                </div>
                <br />
                <h5>Game Mechanics</h5>
                <p>Game design mechanics refer to the mechanisms that guide game play. Common mechanisms include Cards, Dice, Spinners, Trading, Commodity building.</p>
                <div class="form-group">
                    <label asp-for="PrimaryMechanism"></label>
                    <select id="PrimaryMechanismSelect" asp-for="PrimaryMechanism" asp-items="@Model.BoardGameMechanisms" class="form-control" disabled="true">
                        <option>@(Model.PrimaryMechanism ?? "Undefined")</option>
                    </select>
                    <select id="SecondaryMechanismSelect" asp-for="SecondaryMechanism" asp-items="@Model.BoardGameMechanisms" class="form-control" disabled="true">
                        <option>@(Model.SecondaryMechanism ?? "Undefined")</option>
                    </select>
                    <select id="TertiaryMechanismSelect" asp-for="TertiaryMechanism" asp-items="@Model.BoardGameMechanisms" class="form-control" disabled="true">
                        <option>@(Model.TertiaryMechanism ?? "Undefined")</option>
                    </select>
                </div>
            </section>
        </div>
    </div>
    <div class="form-group">
        @if (Model.DisableInputs)
        {
            <button id="Edit" class="btn btn-primary">Edit</button>
        }
        else
        {
            <button id="Save" class="btn btn-primary">Save</button>
        }
        <button id="Delete" class="btn btn-secondary">Delete</button>
        <a href="/library" class="btn btn-secondary">Return</a>
    </div>
    <input type="hidden" asp-for="Action" value="@Model.Action" />
    <input type="hidden" asp-for="DisableInputs" />
</form>
@section Scripts{
    <script src="~/js/Library/Update.js" asp-append-version="true"></script>
}